<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kusonl.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.kusonl.domain.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, birthday, sex, address
  </sql>
  <select id="selectByExample" parameterType="com.kusonl.domain.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kusonl.domain.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kusonl.domain.User">
    insert into user (id, username, birthday, 
      sex, address)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{sex,jdbcType=CHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kusonl.domain.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into user (id, username, birthday, 
      sex, address)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.username,jdbcType=VARCHAR}, #{item.birthday,jdbcType=DATE}, 
        #{item.sex,jdbcType=CHAR}, #{item.address,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into user
    (id, username, birthday, sex, address)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=INTEGER},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.username != null">
          #{item.username,jdbcType=VARCHAR},
        </if>
        <if test="item.username == null">
          NULL,
        </if>
        <if test="item.birthday != null">
          #{item.birthday,jdbcType=DATE},
        </if>
        <if test="item.birthday == null">
          NULL,
        </if>
        <if test="item.sex != null">
          #{item.sex,jdbcType=CHAR},
        </if>
        <if test="item.sex == null">
          NULL,
        </if>
        <if test="item.address != null">
          #{item.address,jdbcType=VARCHAR},
        </if>
        <if test="item.address == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="com.kusonl.domain.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      sex = #{record.sex,jdbcType=CHAR},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kusonl.domain.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kusonl.domain.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      sex = #{sex,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="username =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.username}
        </foreach>
      </trim>
      <trim prefix="birthday =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.birthday}
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.sex}
        </foreach>
      </trim>
      <trim prefix="address =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.address}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="username =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.username != null ">
            when  #{item.id} then #{item.username}
          </if>
          <if test="item.username == null ">
            when  #{item.id} then user.username
          </if>
        </foreach>
      </trim>
      <trim prefix="birthday =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.birthday != null ">
            when  #{item.id} then #{item.birthday}
          </if>
          <if test="item.birthday == null ">
            when  #{item.id} then user.birthday
          </if>
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.sex != null ">
            when  #{item.id} then #{item.sex}
          </if>
          <if test="item.sex == null ">
            when  #{item.id} then user.sex
          </if>
        </foreach>
      </trim>
      <trim prefix="address =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.address != null ">
            when  #{item.id} then #{item.address}
          </if>
          <if test="item.address == null ">
            when  #{item.id} then user.address
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="username =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.username}
        </foreach>
      </trim>
      <trim prefix="birthday =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.birthday}
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.sex}
        </foreach>
      </trim>
      <trim prefix="address =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.address}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update user
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="username =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.username != null ">
            when  #{item.id} then #{item.username}
          </if>
          <if test="item.username == null ">
            when  #{item.id} then user.username
          </if>
        </foreach>
      </trim>
      <trim prefix="birthday =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.birthday != null ">
            when  #{item.id} then #{item.birthday}
          </if>
          <if test="item.birthday == null ">
            when  #{item.id} then user.birthday
          </if>
        </foreach>
      </trim>
      <trim prefix="sex =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.sex != null ">
            when  #{item.id} then #{item.sex}
          </if>
          <if test="item.sex == null ">
            when  #{item.id} then user.sex
          </if>
        </foreach>
      </trim>
      <trim prefix="address =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.address != null ">
            when  #{item.id} then #{item.address}
          </if>
          <if test="item.address == null ">
            when  #{item.id} then user.address
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>